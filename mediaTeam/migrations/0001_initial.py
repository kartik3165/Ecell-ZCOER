# Generated by Django 5.1.6 on 2025-02-27 20:49

import django.core.validators
import django.db.models.deletion
import tinymce.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contentTeam', '0006_event_tags'),
    ]

    operations = [
        migrations.CreateModel(
            name='SocialMediaLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('facebook', 'Facebook'), ('twitter', 'Twitter'), ('instagram', 'Instagram'), ('linkedin', 'LinkedIn'), ('youtube', 'YouTube'), ('github', 'GitHub'), ('website', 'Website')], help_text='The social media platform.', max_length=20)),
                ('url', models.URLField(help_text='The URL of the social media profile or page.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time when the link was added.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The date and time when the link was last updated.')),
            ],
            options={
                'verbose_name': 'Social Media Link',
                'verbose_name_plural': 'Social Media Links',
            },
        ),
        migrations.CreateModel(
            name='EventImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('updated_date', models.DateField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='contentTeam.event')),
            ],
            options={
                'verbose_name': 'EventImage Project',
                'verbose_name_plural': 'EventImage Projects',
            },
        ),
        migrations.CreateModel(
            name='EventImageContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', tinymce.models.HTMLField(blank=True)),
                ('hero_image', models.ImageField(upload_to='EventImage_images')),
                ('EventImage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='mediaTeam.eventimage')),
            ],
        ),
        migrations.CreateModel(
            name='SectionContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_type', models.CharField(choices=[('single', 'Single'), ('double', 'Double'), ('sticky', 'Sticky')], max_length=10)),
                ('order', models.PositiveIntegerField(default=0)),
                ('EventImage_content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='mediaTeam.eventimagecontent')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='MediaContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_type', models.CharField(choices=[('image', 'Image'), ('text', 'Text')], max_length=10)),
                ('aspect_ratio', models.CharField(choices=[('16/9', '16:9'), ('8/9', '8:9')], max_length=10)),
                ('order', models.PositiveIntegerField(default=0)),
                ('position', models.CharField(blank=True, help_text="For double sections: 'left' or 'right'", max_length=10)),
                ('image', models.ImageField(blank=True, null=True, upload_to='EventImage-Images/')),
                ('image_alt', models.CharField(blank=True, max_length=255)),
                ('text_content', tinymce.models.HTMLField(blank=True)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media_items', to='mediaTeam.sectioncontent')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='VideoContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('aspect_ratio', models.CharField(choices=[('16/9', '16:9'), ('8/9', '8:9')], default='16/9', max_length=10)),
                ('order', models.PositiveIntegerField(default=0)),
                ('position', models.CharField(blank=True, help_text="For double sections: 'left' or 'right'", max_length=10)),
                ('source_type', models.CharField(choices=[('file', 'File Upload'), ('youtube', 'YouTube URL')], default='file', max_length=10)),
                ('video_file', models.FileField(blank=True, null=True, upload_to='EventImage-Videos/')),
                ('poster_image', models.ImageField(blank=True, null=True, upload_to='EventImage-Video-Posters/')),
                ('youtube_url', models.URLField(blank=True, validators=[django.core.validators.URLValidator()])),
                ('autoplay', models.BooleanField(default=True)),
                ('loop', models.BooleanField(default=True)),
                ('muted', models.BooleanField(default=True)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='mediaTeam.sectioncontent')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
    ]
